[package]
name = "server"
version = "0.1.0"
authors = ["will"]
edition = "2018"
default-run = "remote_server"

[lib]
path = "src/lib.rs"

[[bin]]
path = "src/main.rs"
name = "remote_server"

[[bin]]
path = "src/cli.rs"
name = "remote_server_cli"

[dependencies]

graphql = { path = "../graphql" }
graphql_core = { path = "../graphql/core" }
graphql_types = { path = "../graphql/types" }
repository = { path = "../repository" }
service = { path = "../service" }
util = { path = "../util" }

actix-cors = "0.6.1"
actix-web = { version= "4.0.1", features = ["rustls"] } 
actix-files = "0.6.0"
# OpenSSL is currently only used indirectly by external crates. For the Android build we need to use
# the "openssl/vendored" feature to make the cross compilation work, i.e. to avoid linking against
# the openssl shared lib which is not easily available on the host platform. To enable the
# "openssl/vendored" feature on Android (see below) the openssl crate needs to be a dependency.
openssl = { version = "0.10", features = ["v110"] }
anyhow = "1.0.44"
config = "0.11.0"
chrono = { version = "0.4", features = ["serde"] }
env_logger = "0.8.3"
log = "0.4.14"
reqwest = { version = "0.11", features = ["json"] }
rustls = "0.20.4"
rustls-pemfile = "1.0.0"
serde = "1.0.137"
serde_json = "1.0.66"
tokio = { version = "1.17.0", features = ["macros" ] }
thiserror = "1"
clap = { version = "3.1.8", features = ["derive"] }

[dev-dependencies]
actix-rt = "2.6.0"
assert-json-diff = "2.0.1"
httpmock = "0.6"
rand = "0.8.5"

[features]
default = ["repository/sqlite"]
postgres = ["repository/postgres"]
# See openssl comment regarding the "openssl/vendored" feature
android = ["repository/sqlite", "openssl/vendored"]
